.\" Automatically generated by Pod::Man version 1.04
.\" Thu Jan 18 18:45:30 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "ECHOSERVER 1"
.TH ECHOSERVER 1 "0.2.4" "2001-01-18" "iodp"
.UC
.SH "NAME"
echoserver \- echo / discard server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
echoserver [options]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBechoserver\fR is a single threaded server, handling packets coming
in on one or more \s-1UDP\s0 or \s-1TCP\s0 server sockets and echoing them back 
to the sender.
.PP
\&\fIoptions\fR is a is a series of getopt or  getopt_long style options. See
below for more information.
.PP
The server sockets have to be created before. Usually this is done
by \fBtcpsocket\fR or \fBudpsocket\fR. 
.PP
\&\fBechoserver\fR is a demonstration code.
.SH "OPTIONS"
.IX Header "OPTIONS"
.Ip "\-d, \-\-discard" 8
.IX Item "-d, --discard"
Don't echo packets back to the sender.
.Ip "\-i, \-\-interval \s-1SECONDS\s0" 8
.IX Item "-i, --interval SECONDS"
Length of an accounting period in seconds. The number of bytes received is
collected for two periods, after which the data of the oldest period
is forgotten. 
.Sp
This option is useless unless used together with \fI\-r\fR.
.Ip "\-r, \-\-rules \s-1FILENAME\s0" 8
.IX Item "-r, --rules FILENAME"
Name of a \s-1CDB\s0 file containing the accounting / access rules. See
\&\s-1RULES\s0, below.
.Ip "\-s, \-\-slots \s-1NUMBER\s0" 8
.IX Item "-s, --slots NUMBER"
Maximum number of open sockets, including the server sockets.
.Ip "\-t, \-\-timeout \s-1SECONDS\s0" 8
.IX Item "-t, --timeout SECONDS"
Drop inbound \s-1TCP\s0 connections after that many seconds of
inactivity.
.Ip "\*(--version" 8
.IX Item "version"
Show version information.
.Ip "\*(--help" 8
.IX Item "help"
Show a list of options or the long help on one.
.Sp
The use with an argument shows the long helptext
of that option, without an argument it will list
all options.
.Ip "\*(--longhelp" 8
.IX Item "longhelp"
Show longer help texts for all or one variable
.Sp
The use with an argument shows the long help for
this option, without arguments it shows the long
description of all options.
.SH "RULES"
.IX Header "RULES"
\&\fBechoserver\fR implements a simple kind of access control, utilizing a
constant database (\s-1CDB\s0) file, which is re-opened every 60 seconds. 
.PP
\&\fBechoservers\fR rule files are compiled by the tcprules utility from 
Daniel Bernsteins \fBucspi-tcp\fR package:
.PP
.Vb 1
\&  tcprules CDB-filename TMP-filename <rules-filename
.Ve
\&\fBechoservers\fR rule resolution is like that of \fBtcpserver\fR, and
the rule format is like that of \fBtcprules\fR, with
the following exceptions:
.PP
.Vb 9
\&  1. There is nothing like $TCPREMOTEINFO in echoserver.
\&  2. The $TCPREMOTEIP environment variable is not used, but 
\&     the IP address of the remote host is used instead.
\&  3. The $TCPREMOTEHOST environment variable is not used, but
\&     the host name of the remote host is used instead.
\&  4. echoserver doesn't set environment variables, but
\&     honors the "limit" variable, which limits how many
\&     bytes are echoed back during two periods (0 means
\&     "no limit").
.Ve
.Sh "Rules file example"
.IX Subsection "Rules file example"
.Vb 3
\&  194.77.219.16-31:allow,limit="0"
\&  194.245.:allow,limit="128000"
\&  :deny
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
How to start \fBechoserver\fR:
.PP
.Vb 3
\&  tcpsocket 0 7 \e
\&  udpsocket 0 7 \e
\&  echoserver -r rules.cdb
.Ve
.SH "BUGS"
.IX Header "BUGS"
unknown.
.SH "AUTHOR"
.IX Header "AUTHOR"
Uwe Ohse
.SH "SEE ALSO"
.IX Header "SEE ALSO"
udpsocket(8), tcpsocket(8).
http://cr.yp.to/ucspi-tcp.html

