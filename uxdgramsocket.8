.\" Automatically generated by Pod::Man version 1.04
.\" Thu Jan 18 18:45:29 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "UXDGRAMSOCKET 1"
.TH UXDGRAMSOCKET 1 "0.2.4" "2001-01-18" "iodp"
.UC
.SH "NAME"
uxdgramsocket \- create a unix domain datagram socket
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
uxdgramsocket [options] path program [arguments]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBuxdgramsocket\fR creates a unix domain datagram socket,
binds it to \fIpath\fR, and runs \fIprogram\fR with
the remaining arguments.
.PP
\&\fIoptions\fR is a is a series of getopt or  getopt_long style options. See
below for more information.
.PP
The socket has the name \fIpath\fR. If that file already exists
it has to be deleted before the socket is created (you can use the
\&\-r / \-\-remove-old-socket option for that). Note that deleting the file
does not close any old instance of the socket, it will merely make
it invisible (this means already connected sockets will stay connected).
.SH "OPTIONS"
.IX Header "OPTIONS"
.Sh "Socket options:"
.IX Subsection "Socket options:"
.Ip "\-R, \-\-unlink" 8
.IX Item "-R, --unlink"
Remove an existing (old) socket.
.Sp
Use this if you are sure that no process still
listings to an existing unix domain socket, or
if you don't care.
.Ip "\-m, \-\-mode=MODE" 8
.IX Item "-m, --mode=MODE"
Set access rights of the socket to \s-1MODE\s0.
.Sp
The default is 0622.
.Sh "Child program options:"
.IX Subsection "Child program options:"
.Ip "\-C, \-\-chroot=DIR" 8
.IX Item "-C, --chroot=DIR"
Change the working directory to \fI\s-1DIR\s0\fR. Then change the
root directory of the process to \fI.\fR (the current
directory).
This will be done after the socket has been created
and before changing the group or user \s-1ID\s0.
.Ip "\-F, \-\-fd=N" 8
.IX Item "-F, --fd=N"
Move socket handle to file descriptor N.
.Sp
`N' may be a whitespace or comma separated list.
The default is to move it to 5.
Note that moving the socket to file descriptor 2
may disturb the output of error messages.
.Ip "\-g, \-\-gid=GID" 8
.IX Item "-g, --gid=GID"
Group \s-1ID\s0 to change to.
.Sp
uxdgramsocket will switch to that group id after
the socket has been set up. \s-1GID\s0 has to be a
positive integer.
.Ip "\-u, \-\-uid=UID" 8
.IX Item "-u, --uid=UID"
User \s-1ID\s0 to change to.
.Sp
uxdgramsocket will switch to that user id after
the socket has been set up. \s-1UID\s0 has to be a
positive integer.
.Ip "\-U, \-\-uidgid" 8
.IX Item "-U, --uidgid"
The same as \fB\-u\fR \f(CW$UID\fR \fB\-g\fR \f(CW$GID\fR.
.Sp
Usually used together with envuidgid.
.Sh "Verbosity options:"
.IX Subsection "Verbosity options:"
.Ip "\-1" 8
.IX Item "-1"
Print the local port number.
.Sp
After preparing to receive connections, print the
local port number to standard output.
.Ip "\-q, \-\-quiet" 8
.IX Item "-q, --quiet"
Quiet. Do not print error messages.
.Ip "\-Q" 8
.IX Item "-Q"
Print error messages.
.Sp
This is the default.
.Ip "\-v, \-\-verbose" 8
.IX Item "-v, --verbose"
Verbose. Print error and status messages.
.Ip "\*(--version" 8
.IX Item "version"
Show version information.
.Ip "\*(--help" 8
.IX Item "help"
Show a list of options or the long help on one.
.Sp
The use with an argument shows the long helptext
of that option, without an argument it will list
all options.
.Ip "\*(--longhelp" 8
.IX Item "longhelp"
Show longer help texts for all or one variable
.Sp
The use with an argument shows the long help for
this option, without arguments it shows the long
description of all options.
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
\&\fBuxdgramsocket\fR sets the environment variables \fI\s-1PROTO\s0\fR (to \fB\s-1UXDGRAM\s0\fR)
and \fI\s-1UXDGRAMLOCALPATH\s0\fR (to \fIpath\fR).
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 1
\&        uxdramsocket -r /dev/log setuidgid misclog unsyslogd
.Ve
.SH "BUGS"
.IX Header "BUGS"
unknown.
.SH "AUTHOR"
.IX Header "AUTHOR"
Uwe Ohse
.SH "SEE ALSO"
.IX Header "SEE ALSO"
tcpsocket(8), udpsocket(8), uxstreamsocket(8), file-iodp(8),
iodp(5).

